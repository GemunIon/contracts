/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DexWithOracle, DexWithOracleInterface } from "../DexWithOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_acceptedToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600060019054906101000a900460ff168062000039575060008054906101000a900460ff16155b6200007b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000072906200011c565b60405180910390fd5b60008060019054906101000a900460ff161590508015620000cc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620000ee5760008060016101000a81548160ff0219169083151502179055505b506200019e565b600062000104602e836200013e565b915062000111826200014f565b604082019050919050565b600060208201905081810360008301526200013781620000f5565b9050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b611a1580620001ae6000396000f3fe6080604052600436106100955760003560e01c8063715018a611610059578063715018a6146101995780638da5cb5b146101b0578063a6f2ae3a146101db578063e4849b32146101e5578063f2fde38b1461020e576100d3565b80632630c12f146100d85780633ccfd60b14610103578063451c3d801461011a578063485cc955146101455780635c975abb1461016e576100d3565b366100d3577fa8142743f8f70a4c26f3691cf4ed59718381fb2f18070ec52be1f1022d855557346040516100c99190611686565b60405180910390a1005b600080fd5b3480156100e457600080fd5b506100ed610237565b6040516100fa919061152b565b60405180910390f35b34801561010f57600080fd5b5061011861025d565b005b34801561012657600080fd5b5061012f61036b565b60405161013c9190611510565b60405180910390f35b34801561015157600080fd5b5061016c600480360381019061016791906111f1565b610391565b005b34801561017a57600080fd5b506101836105ba565b60405161019091906114f5565b60405180910390f35b3480156101a557600080fd5b506101ae6105d1565b005b3480156101bc57600080fd5b506101c5610659565b6040516101d29190611451565b60405180910390f35b6101e3610683565b005b3480156101f157600080fd5b5061020c60048036038101906102079190611256565b6108a8565b005b34801561021a57600080fd5b50610235600480360381019061023091906111c8565b610b13565b005b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610265610c0b565b73ffffffffffffffffffffffffffffffffffffffff16610283610659565b73ffffffffffffffffffffffffffffffffffffffff16146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d0906115e6565b60405180910390fd5b600047905060008111610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031890611606565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610367573d6000803e3d6000fd5b5050565b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff16806103b7575060008054906101000a900460ff16155b6103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed906115c6565b60405180910390fd5b60008060019054906101000a900460ff161590508015610446576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61044e610c13565b610456610cfc565b6104758373ffffffffffffffffffffffffffffffffffffffff16610de5565b6104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90611546565b60405180910390fd5b82609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105148273ffffffffffffffffffffffffffffffffffffffff16610de5565b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a90611666565b60405180910390fd5b81609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156105b55760008060016101000a81548160ff0219169083151502179055505b505050565b6000603360009054906101000a900460ff16905090565b6105d9610c0b565b73ffffffffffffffffffffffffffffffffffffffff166105f7610659565b73ffffffffffffffffffffffffffffffffffffffff161461064d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610644906115e6565b60405180910390fd5b6106576000610df8565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003490506000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106e59190611451565b60206040518083038186803b1580156106fd57600080fd5b505afa158015610711573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610735919061127f565b90506000821161077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190611646565b60405180910390fd5b808211156107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490611626565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161081a9291906114cc565b602060405180830381600087803b15801561083457600080fd5b505af1158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c919061122d565b507f4e08ba899977cf7d4c2964bce71c6b9a7ef76ee5166a4c1249a1e08016e33ef18260405161089c9190611686565b60405180910390a15050565b600081116108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e290611586565b60405180910390fd5b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161094a92919061146c565b60206040518083038186803b15801561096257600080fd5b505afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a919061127f565b9050818110156109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d6906115a6565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a3e93929190611495565b602060405180830381600087803b158015610a5857600080fd5b505af1158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a90919061122d565b503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610ad7573d6000803e3d6000fd5b507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb352054399572782604051610b079190611686565b60405180910390a15050565b610b1b610c0b565b73ffffffffffffffffffffffffffffffffffffffff16610b39610659565b73ffffffffffffffffffffffffffffffffffffffff1614610b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b86906115e6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611566565b60405180910390fd5b610c0881610df8565b50565b600033905090565b600060019054906101000a900460ff1680610c39575060008054906101000a900460ff16155b610c78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6f906115c6565b60405180910390fd5b60008060019054906101000a900460ff161590508015610cc8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610cd0610ebe565b610cd8610f97565b8015610cf95760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610d22575060008054906101000a900460ff16155b610d61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d58906115c6565b60405180910390fd5b60008060019054906101000a900460ff161590508015610db1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610db9610ebe565b610dc161108b565b8015610de25760008060016101000a81548160ff0219169083151502179055505b50565b600080823b905060008111915050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610ee4575060008054906101000a900460ff16155b610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a906115c6565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f73576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f945760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610fbd575060008054906101000a900460ff16155b610ffc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff3906115c6565b60405180910390fd5b60008060019054906101000a900460ff16159050801561104c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000603360006101000a81548160ff02191690831515021790555080156110885760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff16806110b1575060008054906101000a900460ff16155b6110f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e7906115c6565b60405180910390fd5b60008060019054906101000a900460ff161590508015611140576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61115061114b610c0b565b610df8565b80156111715760008060016101000a81548160ff0219169083151502179055505b50565b6000813590506111838161199a565b92915050565b600081519050611198816119b1565b92915050565b6000813590506111ad816119c8565b92915050565b6000815190506111c2816119c8565b92915050565b6000602082840312156111da57600080fd5b60006111e884828501611174565b91505092915050565b6000806040838503121561120457600080fd5b600061121285828601611174565b925050602061122385828601611174565b9150509250929050565b60006020828403121561123f57600080fd5b600061124d84828501611189565b91505092915050565b60006020828403121561126857600080fd5b60006112768482850161119e565b91505092915050565b60006020828403121561129157600080fd5b600061129f848285016111b3565b91505092915050565b6112b1816116b2565b82525050565b6112c0816116c4565b82525050565b6112cf816116fa565b82525050565b6112de8161171e565b82525050565b60006112f16036836116a1565b91506112fc82611742565b604082019050919050565b60006113146026836116a1565b915061131f82611791565b604082019050919050565b60006113376025836116a1565b9150611342826117e0565b604082019050919050565b600061135a6019836116a1565b91506113658261182f565b602082019050919050565b600061137d602e836116a1565b915061138882611858565b604082019050919050565b60006113a06020836116a1565b91506113ab826118a7565b602082019050919050565b60006113c36020836116a1565b91506113ce826118d0565b602082019050919050565b60006113e66020836116a1565b91506113f1826118f9565b602082019050919050565b6000611409601b836116a1565b915061141482611922565b602082019050919050565b600061142c6026836116a1565b91506114378261194b565b604082019050919050565b61144b816116f0565b82525050565b600060208201905061146660008301846112a8565b92915050565b600060408201905061148160008301856112a8565b61148e60208301846112a8565b9392505050565b60006060820190506114aa60008301866112a8565b6114b760208301856112a8565b6114c46040830184611442565b949350505050565b60006040820190506114e160008301856112a8565b6114ee6020830184611442565b9392505050565b600060208201905061150a60008301846112b7565b92915050565b600060208201905061152560008301846112c6565b92915050565b600060208201905061154060008301846112d5565b92915050565b6000602082019050818103600083015261155f816112e4565b9050919050565b6000602082019050818103600083015261157f81611307565b9050919050565b6000602082019050818103600083015261159f8161132a565b9050919050565b600060208201905081810360008301526115bf8161134d565b9050919050565b600060208201905081810360008301526115df81611370565b9050919050565b600060208201905081810360008301526115ff81611393565b9050919050565b6000602082019050818103600083015261161f816113b6565b9050919050565b6000602082019050818103600083015261163f816113d9565b9050919050565b6000602082019050818103600083015261165f816113fc565b9050919050565b6000602082019050818103600083015261167f8161141f565b9050919050565b600060208201905061169b6000830184611442565b92915050565b600082825260208201905092915050565b60006116bd826116d0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117058261170c565b9050919050565b6000611717826116d0565b9050919050565b600061172982611730565b9050919050565b600061173b826116d0565b9050919050565b7f54686520616363657074656420746f6b656e2061646472657373206d7573742060008201527f62652061206465706c6f79656420636f6e747261637400000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f2073656c6c206174206c6561737420736f6d65207460008201527f6f6b656e73000000000000000000000000000000000000000000000000000000602082015250565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220686173206e6f2062616c616e636520746f207769746864726177600082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b7f596f75206e65656420746f2073656e6420736f6d652065746865720000000000600082015250565b7f546865204f7261636c65206d7573742062652061206465706c6f79656420636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6119a3816116b2565b81146119ae57600080fd5b50565b6119ba816116c4565b81146119c557600080fd5b50565b6119d1816116f0565b81146119dc57600080fd5b5056fea264697066735822122028092d0460ea29e5e855f5cfcebd8ae21da734172fadfe1435f54e6a5851a3a564736f6c63430008040033";

export class DexWithOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DexWithOracle> {
    return super.deploy(overrides || {}) as Promise<DexWithOracle>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DexWithOracle {
    return super.attach(address) as DexWithOracle;
  }
  connect(signer: Signer): DexWithOracle__factory {
    return super.connect(signer) as DexWithOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexWithOracleInterface {
    return new utils.Interface(_abi) as DexWithOracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DexWithOracle {
    return new Contract(address, _abi, signerOrProvider) as DexWithOracle;
  }
}
