/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DexWithOracle, DexWithOracleInterface } from "../DexWithOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_acceptedToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOfToken",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600060019054906101000a900460ff168062000039575060008054906101000a900460ff16155b6200007b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000072906200011c565b60405180910390fd5b60008060019054906101000a900460ff161590508015620000cc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620000ee5760008060016101000a81548160ff0219169083151502179055505b506200019e565b600062000104602e836200013e565b915062000111826200014f565b604082019050919050565b600060208201905081810360008301526200013781620000f5565b9050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b611d6d80620001ae6000396000f3fe6080604052600436106100955760003560e01c8063715018a611610059578063715018a6146101995780638da5cb5b146101b0578063a6f2ae3a146101db578063e4849b32146101e5578063f2fde38b1461020e576100d3565b80632630c12f146100d85780633ccfd60b14610103578063451c3d801461011a578063485cc955146101455780635c975abb1461016e576100d3565b366100d3577fa8142743f8f70a4c26f3691cf4ed59718381fb2f18070ec52be1f1022d855557346040516100c991906118cc565b60405180910390a1005b600080fd5b3480156100e457600080fd5b506100ed610237565b6040516100fa9190611751565b60405180910390f35b34801561010f57600080fd5b5061011861025d565b005b34801561012657600080fd5b5061012f61036b565b60405161013c9190611736565b60405180910390f35b34801561015157600080fd5b5061016c600480360381019061016791906113f4565b610391565b005b34801561017a57600080fd5b506101836105ba565b604051610190919061171b565b60405180910390f35b3480156101a557600080fd5b506101ae6105d1565b005b3480156101bc57600080fd5b506101c5610659565b6040516101d29190611677565b60405180910390f35b6101e3610683565b005b3480156101f157600080fd5b5061020c60048036038101906102079190611459565b610995565b005b34801561021a57600080fd5b50610235600480360381019061023091906113cb565b610cb0565b005b609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610265610da8565b73ffffffffffffffffffffffffffffffffffffffff16610283610659565b73ffffffffffffffffffffffffffffffffffffffff16146102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d09061182c565b60405180910390fd5b600047905060008111610321576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103189061184c565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610367573d6000803e3d6000fd5b5050565b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff16806103b7575060008054906101000a900460ff16155b6103f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ed9061180c565b60405180910390fd5b60008060019054906101000a900460ff161590508015610446576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61044e610db0565b610456610e99565b6104758373ffffffffffffffffffffffffffffffffffffffff16610f82565b6104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab9061176c565b60405180910390fd5b82609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105148273ffffffffffffffffffffffffffffffffffffffff16610f82565b610553576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054a906118ac565b60405180910390fd5b81609860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156105b55760008060016101000a81548160ff0219169083151502179055505b505050565b6000603360009054906101000a900460ff16905090565b6105d9610da8565b73ffffffffffffffffffffffffffffffffffffffff166105f7610659565b73ffffffffffffffffffffffffffffffffffffffff161461064d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106449061182c565b60405180910390fd5b6106576000610f95565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600034116106c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bd9061188c565b60405180910390fd5b600061077334609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c8da5886040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561073657600080fd5b505af115801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190611482565b61105b565b9050600081116107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af906117ac565b60405180910390fd5b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108159190611677565b60206040518083038186803b15801561082d57600080fd5b505afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190611482565b9050808211156108aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a19061186c565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016109079291906116f2565b602060405180830381600087803b15801561092157600080fd5b505af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109599190611430565b507f4e08ba899977cf7d4c2964bce71c6b9a7ef76ee5166a4c1249a1e08016e33ef18260405161098991906118cc565b60405180910390a15050565b600081116109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf906117cc565b60405180910390fd5b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610a37929190611692565b60206040518083038186803b158015610a4f57600080fd5b505afa158015610a63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a879190611482565b905081811015610acc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac3906117ec565b60405180910390fd5b6000610b7983609860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633c8da5886040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b3c57600080fd5b505af1158015610b50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b749190611482565b611078565b9050609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610bda939291906116bb565b602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2c9190611430565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610c73573d6000803e3d6000fd5b507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb352054399572783604051610ca391906118cc565b60405180910390a1505050565b610cb8610da8565b73ffffffffffffffffffffffffffffffffffffffff16610cd6610659565b73ffffffffffffffffffffffffffffffffffffffff1614610d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d239061182c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d939061178c565b60405180910390fd5b610da581610f95565b50565b600033905090565b600060019054906101000a900460ff1680610dd6575060008054906101000a900460ff16155b610e15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0c9061180c565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e65576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610e6d611095565b610e7561116e565b8015610e965760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610ebf575060008054906101000a900460ff16155b610efe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef59061180c565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f4e576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f56611095565b610f5e611262565b8015610f7f5760008060016101000a81548160ff0219169083151502179055505b50565b600080823b905060008111915050919050565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611070828461134b90919063ffffffff16565b905092915050565b600061108d828461136190919063ffffffff16565b905092915050565b600060019054906101000a900460ff16806110bb575060008054906101000a900460ff16155b6110fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f19061180c565b60405180910390fd5b60008060019054906101000a900460ff16159050801561114a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b801561116b5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611194575060008054906101000a900460ff16155b6111d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ca9061180c565b60405180910390fd5b60008060019054906101000a900460ff161590508015611223576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000603360006101000a81548160ff021916908315150217905550801561125f5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611288575060008054906101000a900460ff16155b6112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be9061180c565b60405180910390fd5b60008060019054906101000a900460ff161590508015611317576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611327611322610da8565b610f95565b80156113485760008060016101000a81548160ff0219169083151502179055505b50565b6000818361135991906118f8565b905092915050565b6000818361136f9190611929565b905092915050565b60008135905061138681611cf2565b92915050565b60008151905061139b81611d09565b92915050565b6000813590506113b081611d20565b92915050565b6000815190506113c581611d20565b92915050565b6000602082840312156113dd57600080fd5b60006113eb84828501611377565b91505092915050565b6000806040838503121561140757600080fd5b600061141585828601611377565b925050602061142685828601611377565b9150509250929050565b60006020828403121561144257600080fd5b60006114508482850161138c565b91505092915050565b60006020828403121561146b57600080fd5b6000611479848285016113a1565b91505092915050565b60006020828403121561149457600080fd5b60006114a2848285016113b6565b91505092915050565b6114b481611983565b82525050565b6114c381611995565b82525050565b6114d2816119cb565b82525050565b6114e1816119ef565b82525050565b60006114f46036836118e7565b91506114ff82611a71565b604082019050919050565b60006115176026836118e7565b915061152282611ac0565b604082019050919050565b600061153a6020836118e7565b915061154582611b0f565b602082019050919050565b600061155d6025836118e7565b915061156882611b38565b604082019050919050565b60006115806019836118e7565b915061158b82611b87565b602082019050919050565b60006115a3602e836118e7565b91506115ae82611bb0565b604082019050919050565b60006115c66020836118e7565b91506115d182611bff565b602082019050919050565b60006115e96020836118e7565b91506115f482611c28565b602082019050919050565b600061160c6020836118e7565b915061161782611c51565b602082019050919050565b600061162f601b836118e7565b915061163a82611c7a565b602082019050919050565b60006116526026836118e7565b915061165d82611ca3565b604082019050919050565b611671816119c1565b82525050565b600060208201905061168c60008301846114ab565b92915050565b60006040820190506116a760008301856114ab565b6116b460208301846114ab565b9392505050565b60006060820190506116d060008301866114ab565b6116dd60208301856114ab565b6116ea6040830184611668565b949350505050565b600060408201905061170760008301856114ab565b6117146020830184611668565b9392505050565b600060208201905061173060008301846114ba565b92915050565b600060208201905061174b60008301846114c9565b92915050565b600060208201905061176660008301846114d8565b92915050565b60006020820190508181036000830152611785816114e7565b9050919050565b600060208201905081810360008301526117a58161150a565b9050919050565b600060208201905081810360008301526117c58161152d565b9050919050565b600060208201905081810360008301526117e581611550565b9050919050565b6000602082019050818103600083015261180581611573565b9050919050565b6000602082019050818103600083015261182581611596565b9050919050565b60006020820190508181036000830152611845816115b9565b9050919050565b60006020820190508181036000830152611865816115dc565b9050919050565b60006020820190508181036000830152611885816115ff565b9050919050565b600060208201905081810360008301526118a581611622565b9050919050565b600060208201905081810360008301526118c581611645565b9050919050565b60006020820190506118e16000830184611668565b92915050565b600082825260208201905092915050565b6000611903826119c1565b915061190e836119c1565b92508261191e5761191d611a42565b5b828204905092915050565b6000611934826119c1565b915061193f836119c1565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561197857611977611a13565b5b828202905092915050565b600061198e826119a1565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006119d6826119dd565b9050919050565b60006119e8826119a1565b9050919050565b60006119fa82611a01565b9050919050565b6000611a0c826119a1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f54686520616363657074656420746f6b656e2061646472657373206d7573742060008201527f62652061206465706c6f79656420636f6e747261637400000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820746f20627579206576656e206f6e6520746f6b656e600082015250565b7f596f75206e65656420746f2073656c6c206174206c6561737420736f6d65207460008201527f6f6b656e73000000000000000000000000000000000000000000000000000000602082015250565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f776e657220686173206e6f2062616c616e636520746f207769746864726177600082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b7f596f75206e65656420746f2073656e6420736f6d652065746865720000000000600082015250565b7f546865204f7261636c65206d7573742062652061206465706c6f79656420636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b611cfb81611983565b8114611d0657600080fd5b50565b611d1281611995565b8114611d1d57600080fd5b50565b611d29816119c1565b8114611d3457600080fd5b5056fea2646970667358221220a688c8ba26b81791feb4d00193bfd8f479f6404417cfc1dfca8e5d2b63bfaa8264736f6c63430008040033";

export class DexWithOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DexWithOracle> {
    return super.deploy(overrides || {}) as Promise<DexWithOracle>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DexWithOracle {
    return super.attach(address) as DexWithOracle;
  }
  connect(signer: Signer): DexWithOracle__factory {
    return super.connect(signer) as DexWithOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexWithOracleInterface {
    return new utils.Interface(_abi) as DexWithOracleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DexWithOracle {
    return new Contract(address, _abi, signerOrProvider) as DexWithOracle;
  }
}
