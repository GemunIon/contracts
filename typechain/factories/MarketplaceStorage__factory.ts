/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MarketplaceStorage, MarketplaceStorageInterface } from "../MarketplaceStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "ownerCutPerMillion",
        type: "uint256",
      },
    ],
    name: "ChangedOwnerCutPerMillion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "publicationFee",
        type: "uint256",
      },
    ],
    name: "ChangedPublicationFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "priceInWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
    ],
    name: "OrderSuccessful",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC721_Interface",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "InterfaceId_ValidateFingerprint",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "orderByAssetId",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownerCutPerMillion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicationFeeInWei",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610462806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632b4c32be1461006757806337f82f3714610085578063451c3d80146100a3578063a01f79d4146100c1578063ae4f1198146100df578063e61f3851146100fd575b600080fd5b61006f610131565b60405161007c9190610317565b60405180910390f35b61008d61013c565b60405161009a9190610317565b60405180910390f35b6100ab610160565b6040516100b89190610332565b60405180910390f35b6100c9610184565b6040516100d6919061034d565b60405180910390f35b6100e761018a565b6040516100f4919061034d565b60405180910390f35b6101176004803603810190610112919061023d565b610190565b6040516101289594939291906102c4565b60405180910390f35b6380ac58cd60e01b81565b7f8f9f4b63fb27ea36c52c6e650320201c8f2c6d7c1dfa95f40f5d5da52392016881565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60035481565b6001602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040154905085565b600081359050610222816103fe565b92915050565b60008135905061023781610415565b92915050565b6000806040838503121561025057600080fd5b600061025e85828601610213565b925050602061026f85828601610228565b9150509250929050565b61028281610368565b82525050565b6102918161037a565b82525050565b6102a081610384565b82525050565b6102af816103da565b82525050565b6102be816103d0565b82525050565b600060a0820190506102d96000830188610288565b6102e66020830187610279565b6102f36040830186610279565b61030060608301856102b5565b61030d60808301846102b5565b9695505050505050565b600060208201905061032c6000830184610297565b92915050565b600060208201905061034760008301846102a6565b92915050565b600060208201905061036260008301846102b5565b92915050565b6000610373826103b0565b9050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103e5826103ec565b9050919050565b60006103f7826103b0565b9050919050565b61040781610368565b811461041257600080fd5b50565b61041e816103d0565b811461042957600080fd5b5056fea2646970667358221220164ecd97c22c7b0f34c191680d19e77e0e8f4ac1e7d4b57c0e32c8953cccda5a64736f6c63430008040033";

export class MarketplaceStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MarketplaceStorage> {
    return super.deploy(overrides || {}) as Promise<MarketplaceStorage>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MarketplaceStorage {
    return super.attach(address) as MarketplaceStorage;
  }
  connect(signer: Signer): MarketplaceStorage__factory {
    return super.connect(signer) as MarketplaceStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceStorageInterface {
    return new utils.Interface(_abi) as MarketplaceStorageInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MarketplaceStorage {
    return new Contract(address, _abi, signerOrProvider) as MarketplaceStorage;
  }
}
