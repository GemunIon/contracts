/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DEX, DEXInterface } from "../DEX";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Bought",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Sold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptedToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_acceptedToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600060019054906101000a900460ff168062000039575060008054906101000a900460ff16155b6200007b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000072906200011c565b60405180910390fd5b60008060019054906101000a900460ff161590508015620000cc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015620000ee5760008060016101000a81548160ff0219169083151502179055505b506200019e565b600062000104602e836200013e565b915062000111826200014f565b604082019050919050565b600060208201905081810360008301526200013781620000f5565b9050919050565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b61166180620001ae6000396000f3fe60806040526004361061007f5760003560e01c8063a6f2ae3a1161004e578063a6f2ae3a1461015a578063c4d66de814610164578063e4849b321461018d578063f2fde38b146101b6576100bd565b8063451c3d80146100c25780635c975abb146100ed578063715018a6146101185780638da5cb5b1461012f576100bd565b366100bd577fa8142743f8f70a4c26f3691cf4ed59718381fb2f18070ec52be1f1022d855557346040516100b3919061136e565b60405180910390a1005b600080fd5b3480156100ce57600080fd5b506100d76101df565b6040516100e49190611253565b60405180910390f35b3480156100f957600080fd5b50610102610205565b60405161010f9190611238565b60405180910390f35b34801561012457600080fd5b5061012d61021c565b005b34801561013b57600080fd5b506101446102a4565b6040516101519190611194565b60405180910390f35b6101626102ce565b005b34801561017057600080fd5b5061018b60048036038101906101869190610f9c565b6104f3565b005b34801561019957600080fd5b506101b460048036038101906101af9190610fee565b61067c565b005b3480156101c257600080fd5b506101dd60048036038101906101d89190610f9c565b6108e7565b005b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900460ff16905090565b6102246109df565b73ffffffffffffffffffffffffffffffffffffffff166102426102a4565b73ffffffffffffffffffffffffffffffffffffffff1614610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f9061130e565b60405180910390fd5b6102a260006109e7565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003490506000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103309190611194565b60206040518083038186803b15801561034857600080fd5b505afa15801561035c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103809190611017565b9050600082116103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc9061134e565b60405180910390fd5b80821115610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061132e565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b815260040161046592919061120f565b602060405180830381600087803b15801561047f57600080fd5b505af1158015610493573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b79190610fc5565b507f4e08ba899977cf7d4c2964bce71c6b9a7ef76ee5166a4c1249a1e08016e33ef1826040516104e7919061136e565b60405180910390a15050565b600060019054906101000a900460ff1680610519575060008054906101000a900460ff16155b610558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054f906112ee565b60405180910390fd5b60008060019054906101000a900460ff1615905080156105a8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6105b0610aad565b6105b8610b96565b6105d78273ffffffffffffffffffffffffffffffffffffffff16610c7f565b610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d9061126e565b60405180910390fd5b81609760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080156106785760008060016101000a81548160ff0219169083151502179055505b5050565b600081116106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b6906112ae565b60405180910390fd5b6000609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161071e9291906111af565b60206040518083038186803b15801561073657600080fd5b505afa15801561074a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076e9190611017565b9050818110156107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa906112ce565b60405180910390fd5b609760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610812939291906111d8565b602060405180830381600087803b15801561082c57600080fd5b505af1158015610840573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108649190610fc5565b503373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156108ab573d6000803e3d6000fd5b507f92f64ca637d023f354075a4be751b169c1a8a9ccb6d33cdd0cb3520543995727826040516108db919061136e565b60405180910390a15050565b6108ef6109df565b73ffffffffffffffffffffffffffffffffffffffff1661090d6102a4565b73ffffffffffffffffffffffffffffffffffffffff1614610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095a9061130e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca9061128e565b60405180910390fd5b6109dc816109e7565b50565b600033905090565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680610ad3575060008054906101000a900460ff16155b610b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b09906112ee565b60405180910390fd5b60008060019054906101000a900460ff161590508015610b62576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610b6a610c92565b610b72610d6b565b8015610b935760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610bbc575060008054906101000a900460ff16155b610bfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf2906112ee565b60405180910390fd5b60008060019054906101000a900460ff161590508015610c4b576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610c53610c92565b610c5b610e5f565b8015610c7c5760008060016101000a81548160ff0219169083151502179055505b50565b600080823b905060008111915050919050565b600060019054906101000a900460ff1680610cb8575060008054906101000a900460ff16155b610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee906112ee565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d47576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610d685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610d91575060008054906101000a900460ff16155b610dd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc7906112ee565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e20576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000603360006101000a81548160ff0219169083151502179055508015610e5c5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610e85575060008054906101000a900460ff16155b610ec4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ebb906112ee565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f14576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610f24610f1f6109df565b6109e7565b8015610f455760008060016101000a81548160ff0219169083151502179055505b50565b600081359050610f57816115e6565b92915050565b600081519050610f6c816115fd565b92915050565b600081359050610f8181611614565b92915050565b600081519050610f9681611614565b92915050565b600060208284031215610fae57600080fd5b6000610fbc84828501610f48565b91505092915050565b600060208284031215610fd757600080fd5b6000610fe584828501610f5d565b91505092915050565b60006020828403121561100057600080fd5b600061100e84828501610f72565b91505092915050565b60006020828403121561102957600080fd5b600061103784828501610f87565b91505092915050565b6110498161139a565b82525050565b611058816113ac565b82525050565b611067816113e2565b82525050565b600061107a603683611389565b915061108582611406565b604082019050919050565b600061109d602683611389565b91506110a882611455565b604082019050919050565b60006110c0602583611389565b91506110cb826114a4565b604082019050919050565b60006110e3601983611389565b91506110ee826114f3565b602082019050919050565b6000611106602e83611389565b91506111118261151c565b604082019050919050565b6000611129602083611389565b91506111348261156b565b602082019050919050565b600061114c602083611389565b915061115782611594565b602082019050919050565b600061116f601b83611389565b915061117a826115bd565b602082019050919050565b61118e816113d8565b82525050565b60006020820190506111a96000830184611040565b92915050565b60006040820190506111c46000830185611040565b6111d16020830184611040565b9392505050565b60006060820190506111ed6000830186611040565b6111fa6020830185611040565b6112076040830184611185565b949350505050565b60006040820190506112246000830185611040565b6112316020830184611185565b9392505050565b600060208201905061124d600083018461104f565b92915050565b6000602082019050611268600083018461105e565b92915050565b600060208201905081810360008301526112878161106d565b9050919050565b600060208201905081810360008301526112a781611090565b9050919050565b600060208201905081810360008301526112c7816110b3565b9050919050565b600060208201905081810360008301526112e7816110d6565b9050919050565b60006020820190508181036000830152611307816110f9565b9050919050565b600060208201905081810360008301526113278161111c565b9050919050565b600060208201905081810360008301526113478161113f565b9050919050565b6000602082019050818103600083015261136781611162565b9050919050565b60006020820190506113836000830184611185565b92915050565b600082825260208201905092915050565b60006113a5826113b8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113ed826113f4565b9050919050565b60006113ff826113b8565b9050919050565b7f54686520616363657074656420746f6b656e2061646472657373206d7573742060008201527f62652061206465706c6f79656420636f6e747261637400000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f596f75206e65656420746f2073656c6c206174206c6561737420736f6d65207460008201527f6f6b656e73000000000000000000000000000000000000000000000000000000602082015250565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665600082015250565b7f596f75206e65656420746f2073656e6420736f6d652065746865720000000000600082015250565b6115ef8161139a565b81146115fa57600080fd5b50565b611606816113ac565b811461161157600080fd5b50565b61161d816113d8565b811461162857600080fd5b5056fea26469706673582212205d7bf49c0fb80ac6ce295b686c02e742fae06a6ec1354e140a109569495b6e8664736f6c63430008040033";

export class DEX__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DEX> {
    return super.deploy(overrides || {}) as Promise<DEX>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DEX {
    return super.attach(address) as DEX;
  }
  connect(signer: Signer): DEX__factory {
    return super.connect(signer) as DEX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DEXInterface {
    return new utils.Interface(_abi) as DEXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DEX {
    return new Contract(address, _abi, signerOrProvider) as DEX;
  }
}
