/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinimalForwarderUpgradeable, MinimalForwarderUpgradeableInterface } from "../MinimalForwarderUpgradeable";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b0a806100206000396000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f6100543660046108c7565b6001600160a01b031660009081526035602052604090205490565b6040519081526020015b60405180910390f35b6100956100903660046108f5565b6100d3565b6040516100799291906109df565b3480156100af57600080fd5b506100c36100be3660046108f5565b61028c565b6040519015158152602001610079565b600060606100e285858561028c565b6101595760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f657360448201527f206e6f74206d617463682072657175657374000000000000000000000000000060648201526084015b60405180910390fd5b61016860808601356001610a60565b6035600061017960208901896108c7565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101b391906108c7565b6001600160a01b0316606088013560408901356101d360a08b018b610a1b565b6101e060208d018d6108c7565b6040516020016101f29392919061099d565b60408051601f198184030181529082905261020c916109c3565b600060405180830381858888f193505050503d806000811461024a576040519150601f19603f3d011682016040523d82523d6000602084013e61024f565b606091505b509092509050610264603f6060890135610a84565b5a1161028057634e487b7160e01b600052600160045260246000fd5b90969095509350505050565b60008061039f84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061039992507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102fc905060208a018a6108c7565b61030c60408b0160208c016108c7565b60408b013560608c013560808d013561032860a08f018f610a1b565b60405161033692919061098d565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e0810191909152610100016040516020818303038152906040528051906020012061040b565b9061047a565b90506080850135603560006103b760208901896108c7565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561040257506103ed60208601866108c7565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061047461041861049e565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610489858561051e565b915091506104968161058e565b509392505050565b60006105197f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6104cd60015490565b6002546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b6000808251604114156105555760208301516040840151606085015160001a61054987828585610792565b94509450505050610587565b82516040141561057f576020830151604084015161057486838361087f565b935093505050610587565b506000905060025b9250929050565b60008160048111156105b057634e487b7160e01b600052602160045260246000fd5b14156105b95750565b60018160048111156105db57634e487b7160e01b600052602160045260246000fd5b14156106295760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610150565b600281600481111561064b57634e487b7160e01b600052602160045260246000fd5b14156106995760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610150565b60038160048111156106bb57634e487b7160e01b600052602160045260246000fd5b14156107145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610150565b600481600481111561073657634e487b7160e01b600052602160045260246000fd5b141561078f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610150565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107c95750600090506003610876565b8460ff16601b141580156107e157508460ff16601c14155b156107f25750600090506004610876565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610846573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661086f57600060019250925050610876565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831660ff84901c601b016108b987828885610792565b935093505050935093915050565b6000602082840312156108d8578081fd5b81356001600160a01b03811681146108ee578182fd5b9392505050565b600080600060408486031215610909578182fd5b833567ffffffffffffffff80821115610920578384fd5b9085019060c08288031215610933578384fd5b90935060208501359080821115610948578384fd5b818601915086601f83011261095b578384fd5b813581811115610969578485fd5b87602082850101111561097a578485fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b600082516109d5818460208701610aa4565b9190910192915050565b82151581526040602082015260008251806040840152610a06816060850160208701610aa4565b601f01601f1916919091016060019392505050565b6000808335601e19843603018112610a31578283fd5b83018035915067ffffffffffffffff821115610a4b578283fd5b60200191503681900382131561058757600080fd5b60008219821115610a7f57634e487b7160e01b81526011600452602481fd5b500190565b600082610a9f57634e487b7160e01b81526012600452602481fd5b500490565b60005b83811015610abf578181015183820152602001610aa7565b83811115610ace576000848401525b5050505056fea2646970667358221220f78e4b1361933b9cb25dd4c19796de3332cd0f29177ba399e7f0b0c96917c12d64736f6c63430008040033";

export class MinimalForwarderUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MinimalForwarderUpgradeable> {
    return super.deploy(overrides || {}) as Promise<MinimalForwarderUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalForwarderUpgradeable {
    return super.attach(address) as MinimalForwarderUpgradeable;
  }
  connect(signer: Signer): MinimalForwarderUpgradeable__factory {
    return super.connect(signer) as MinimalForwarderUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderUpgradeableInterface {
    return new utils.Interface(_abi) as MinimalForwarderUpgradeableInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MinimalForwarderUpgradeable {
    return new Contract(address, _abi, signerOrProvider) as MinimalForwarderUpgradeable;
  }
}
